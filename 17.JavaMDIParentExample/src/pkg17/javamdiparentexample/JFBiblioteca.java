/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/MDIApplication.java to edit this template
 */
package pkg17.javamdiparentexample;

import java.util.Vector;
import pkg17.javamdiparentexample.logic.Pais;

/**
 *
 * @author jufeq
 */
public class JFBiblioteca extends javax.swing.JFrame {
    
    private JFUsuario jfUsuario = null;
    
    /**
     * Creates new form Biblioteca
     */
    public JFBiblioteca() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        personaMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileMenu.setMnemonic('f');
        fileMenu.setText("Biblioteca");

        personaMenuItem.setMnemonic('o');
        personaMenuItem.setText("Usuarios");
        personaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personaMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(personaMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Prestamos");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Reservas");
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void personaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personaMenuItemActionPerformed
        // TODO add your handling code here:
        if(this.jfUsuario == null || this.jfUsuario.isClosed()){
            this.jfUsuario = new JFUsuario();
            
            this.jfUsuario.setPaisesForm(getPaises());
        }
        
        this.desktopPane.add(this.jfUsuario);
        this.jfUsuario.setVisible(true);
    }//GEN-LAST:event_personaMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFBiblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem personaMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables
    
    //Private methods
    
    private Vector<Pais> getPaises(){
        Vector<Pais> paises = new Vector<>();
        paises.add(new Pais(1, "Argentina"));
        paises.add(new Pais(2, "Australia"));
        paises.add(new Pais(3, "Austria"));
        paises.add(new Pais(4, "Bélgica"));
        paises.add(new Pais(5, "Brasil"));
        paises.add(new Pais(6, "Canadá"));
        paises.add(new Pais(7, "Chile"));
        paises.add(new Pais(8, "China"));
        paises.add(new Pais(9, "Colombia"));
        paises.add(new Pais(10, "Corea del Sur"));
        paises.add(new Pais(11, "Dinamarca"));
        paises.add(new Pais(12, "Ecuador"));
        paises.add(new Pais(13, "Egipto"));
        paises.add(new Pais(14, "España"));
        paises.add(new Pais(15, "Estados Unidos"));
        paises.add(new Pais(16, "Filipinas"));
        paises.add(new Pais(17, "Finlandia"));
        paises.add(new Pais(18, "Francia"));
        paises.add(new Pais(19, "Grecia"));
        paises.add(new Pais(20, "Guatemala"));
        paises.add(new Pais(21, "India"));
        paises.add(new Pais(22, "Indonesia"));
        paises.add(new Pais(23, "Irlanda"));
        paises.add(new Pais(24, "Italia"));
        paises.add(new Pais(25, "Japón"));
        paises.add(new Pais(26, "México"));
        paises.add(new Pais(27, "Noruega"));
        paises.add(new Pais(28, "Nueva Zelanda"));
        paises.add(new Pais(29, "Países Bajos"));
        paises.add(new Pais(30, "Panamá"));
        paises.add(new Pais(31, "Paraguay"));
        paises.add(new Pais(32, "Perú"));
        paises.add(new Pais(33, "Polonia"));
        paises.add(new Pais(34, "Portugal"));
        paises.add(new Pais(35, "Reino Unido"));
        paises.add(new Pais(36, "República Checa"));
        paises.add(new Pais(37, "Rusia"));
        paises.add(new Pais(38, "Singapur"));
        paises.add(new Pais(39, "Sudáfrica"));
        paises.add(new Pais(40, "Suecia"));
        paises.add(new Pais(41, "Suiza"));
        paises.add(new Pais(42, "Tailandia"));
        paises.add(new Pais(43, "Turquía"));
        paises.add(new Pais(44, "Ucrania"));
        paises.add(new Pais(45, "Uruguay"));
        paises.add(new Pais(46, "Venezuela"));
        paises.add(new Pais(47, "Vietnam"));
        paises.add(new Pais(48, "Argelia"));
        paises.add(new Pais(49, "Bangladés"));
        paises.add(new Pais(50, "Arabia Saudita"));
        
        return paises;
    }
}
